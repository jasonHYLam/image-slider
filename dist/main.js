(()=>{"use strict";var n,e,t,r,i,o,a,c,s,d,l,A,u,p,f={426:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),i=t.n(r),o=t(645),a=t.n(o)()(i());a.push([n.id,"body {\n}\n\n.container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.picture-frame {\n    margin: auto;\n    border: 1px solid pink;\n    position: relative;\n    width: 333px;\n    overflow: hidden;\n}\n\n.wide-div {\n    width: 1000px;\n    border: solid 1px black;\n    display: flex;\n    position: relative;\n}\n\n.wide-div.move-center {\n    left: 50%;\n    transform: translate(-50%);\n    transition: 2s;\n}\n\n.wide-div.start-left {\n    left: 0;\n    transform: translate(0%);\n}\n\n.wide-div.start-right {\n    left: 100%;\n    transform: translate(-100%);\n}\n\n.slide {\n    flex: 1;\n    border: solid 1px black;\n    height: 200px;\n}\n\n.slide1 {\n    background-color: red;\n}\n\n.slide2 {\n    background-color: blue;\n}\n.slide3 {\n    background-color: yellow;\n}\n\n.nav-container {\n    margin-top: 10px;\n    display: flex;\n    gap: 10px;\n}\n\n.nav-circle {\n    height: 10px;\n    width: 10px;\n    border: solid 1px black;\n    border-radius: 50%;\n    cursor: pointer;\n}\n\n.nav-circle.clicked {\n    background-color: black;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;AACA;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;AACA;IACI,YAAY;IACZ,sBAAsB;IACtB,kBAAkB;IAClB,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,SAAS;IACT,0BAA0B;IAC1B,cAAc;AAClB;;AAEA;IACI,OAAO;IACP,wBAAwB;AAC5B;;AAEA;IACI,UAAU;IACV,2BAA2B;AAC/B;;AAEA;IACI,OAAO;IACP,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,sBAAsB;AAC1B;AACA;IACI,wBAAwB;AAC5B;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,uBAAuB;IACvB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,uBAAuB;AAC3B",sourcesContent:["body {\n}\n\n.container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.picture-frame {\n    margin: auto;\n    border: 1px solid pink;\n    position: relative;\n    width: 333px;\n    overflow: hidden;\n}\n\n.wide-div {\n    width: 1000px;\n    border: solid 1px black;\n    display: flex;\n    position: relative;\n}\n\n.wide-div.move-center {\n    left: 50%;\n    transform: translate(-50%);\n    transition: 2s;\n}\n\n.wide-div.start-left {\n    left: 0;\n    transform: translate(0%);\n}\n\n.wide-div.start-right {\n    left: 100%;\n    transform: translate(-100%);\n}\n\n.slide {\n    flex: 1;\n    border: solid 1px black;\n    height: 200px;\n}\n\n.slide1 {\n    background-color: red;\n}\n\n.slide2 {\n    background-color: blue;\n}\n.slide3 {\n    background-color: yellow;\n}\n\n.nav-container {\n    margin-top: 10px;\n    display: flex;\n    gap: 10px;\n}\n\n.nav-circle {\n    height: 10px;\n    width: 10px;\n    border: solid 1px black;\n    border-radius: 50%;\n    cursor: pointer;\n}\n\n.nav-circle.clicked {\n    background-color: black;\n}"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,i,o){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);r&&a[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},a=[],c=0;c<n.length;c++){var s=n[c],d=r.base?s[0]+r.base:s[0],l=o[d]||0,A="".concat(d," ").concat(l);o[d]=l+1;var u=t(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=i(p,r);r.byIndex=c,e.splice(c,0,{identifier:A,updater:f,references:1})}a.push(A)}return a}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var o=r(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<o.length;a++){var c=t(o[a]);e[c].references--}for(var s=r(n,i),d=0;d<o.length;d++){var l=t(o[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},v={};function m(n){var e=v[n];if(void 0!==e)return e.exports;var t=v[n]={id:n,exports:{}};return f[n](t,t.exports,m),t.exports}m.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return m.d(e,{a:e}),e},m.d=(n,e)=>{for(var t in e)m.o(e,t)&&!m.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},m.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),m.nc=void 0,n=m(379),e=m.n(n),t=m(795),r=m.n(t),i=m(569),o=m.n(i),a=m(565),c=m.n(a),s=m(216),d=m.n(s),l=m(589),A=m.n(l),u=m(426),(p={}).styleTagTransform=A(),p.setAttributes=c(),p.insert=o().bind(null,"head"),p.domAPI=r(),p.insertStyleElement=d(),e()(u.Z,p),u.Z&&u.Z.locals&&u.Z.locals,function(){function n(n,e,t,...r){const i=document.createElement(n);return i.textContent=e,r.map((n=>i.classList.add(n))),t.appendChild(i),i}function e(){return document.querySelector(".wide-div")}function t(n,e){(function(n,e){return n.classList.contains(e)})(n,e)&&function(n,e){n.classList.remove(e)}(n,e)}function r(){t(e(),"start-right"),t(e(),"move-center"),e().classList.add("start-left")}function i(){t(e(),"start-left"),t(e(),"move-center"),e().classList.add("start-right")}function o(){t(e(),"start-left"),t(e(),"start-right"),e().classList.add("move-center")}function a(){const n=e().firstChild;e().removeChild(n),e().appendChild(n)}function c(){const n=e().firstChild,t=e().lastChild;e().removeChild(t),e().insertBefore(t,n)}function s(){return e().childNodes[1]}function d(){return document.querySelectorAll(".nav-circle")}!function(){const e=n("div","",document.querySelector("body"),"container"),t=n("div","",e,"picture-frame"),r=n("div","",t,"wide-div","move-center");n("div","slide 1",r,"slide","slide1").setAttribute("data-index",1),n("div","slide 2",r,"slide","slide2").setAttribute("data-index",2),n("div","slide 3",r,"slide","slide3").setAttribute("data-index",3);const i=n("div","",e,"nav-container");n("div","",i,"nav-circle","nav-1").setAttribute("data-index",1),n("div","",i,"nav-circle","nav-2").setAttribute("data-index",2),n("div","",i,"nav-circle","nav-3").setAttribute("data-index",3)}(),document.querySelector(".move-right").addEventListener("click",(()=>{c(),i(),setTimeout(o,1),s()})),document.querySelector(".move-left").addEventListener("click",(()=>{a(),r(),setTimeout(o,1),s()})),d().forEach((n=>{n.addEventListener("click",(e=>{d().forEach((n=>{n.classList.remove("clicked")})),e.target.classList.add("clicked"),function(n){const e=s().dataset.index;console.log("prev index"),console.log(e),console.log("next index"),console.log(n);let t=Math.abs(e-n);if(n==e);else if(e<n)for(let n=0;n<t;n++)a(),r();else if(e>n)for(let n=0;n<t;n++)c(),i();setTimeout(o,1)}(n.dataset.index)}))})),setInterval((()=>{a(),r(),setTimeout(o,1)}),5001)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,